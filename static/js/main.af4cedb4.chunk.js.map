{"version":3,"sources":["logo.svg","serviceWorker.js","models/Circle.js","models/Product.js","models/Favorite.js","views/EventSelect.js","components/FavoriteStart.js","components/CircleCard.js","components/ProductCard.js","views/CircleSelect.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","EventEmitter","require","Endpoint","BoothToken","booth2order","booth","spaceToken","concat","exec","slice","spaceCategory","codePointAt","indexOf","CircleModel","this","_event","_store","orderBy","lookupBy","circles","_waitCircleList","options","circleId","reqUrls","reqCircleList","push","req","reqUrl","shift","fetch","method","then","res","json","data","cursor","unshift","replace","console","log","list","circleInfo","i","id","space","j","spaces","sort","a","b","emit","catch","err","error","name","listner","on","removeListener","map","boothNo","getCircleByBooth","length","orderIndex","ProductModel","seq","products","productInfo","circleExhibitInfoID","productId","orderBySeq","Object","keys","index","indexBySeq","KeyLocalStorage","FavoriteModel","JSON","parse","localStorage","getItem","key","updated","setItem","stringify","favorite","EventSelectView","to","Button","FavoriteStar","models","useState","isFavorite","favorited","setFavorited","setFavorite","useCallback","unsetFavorite","useEffect","onFavoriteChange","params","off","style","position","top","right","padding","onClick","icon","faStarChecked","faStarUnchecked","color","size","CircleCard","circleCut","circleCutImage","url","width","height","className","Header","variant","FavoriteStart","textAlign","marginTop","Img","src","display","border","overflow","Body","Text","Group","controlId","Label","nameRuby","penName","webSiteURL","genre","genreFreeFormat","Type2Text","ProductCard","firstImage","images","type","page","price","firstAppearanceEventName","description","CarouselButtonNormalStyle","background","CarouselButtonHiddenStyle","assign","CircleSelectView","history","circle","product","event","circleList","setCircleList","setCircleInfo","productList","setProductList","setProductInfo","circleInfo_","getCircle","request","getProductList","productInfo_","getProduct","onCircleChange","getCircleListOrderByBooth","firstCircleInfo","getFirstBooth","onCircleLoaded","onProductChange","onProductLoaded","circleList_","curCircleIndex","getCircleBoothOrder","productList_","curProductIndex","getProductOrder","naturalSlideWidth","innerWidth","naturalSlideHeight","innerHeight","totalSlides","currentSlide","onMasterSpinner","args","circleId_","orientation","productId_","prevProduct","getPrevSiblings","faAngleUp","nextProduct","getNextSiblings","faAngleDown","prevCircle","getPrevSiblingsBooth","faAngleLeft","nextCircle","getNextSiblingsBooth","faAngleRight","App","path","exact","render","router","EventSelect","CircleSelect","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af4cedb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\"use struct\";\n\n// このオプションのコードは、Service Workerを登録するために使用されます。\n// register() はデフォルトでは呼び出されません。\n\n// これにより、その後の実稼働時のアクセスでアプリの読み込みが速くなり、\n// オフライン機能が提供されます。 ただし、開発者（およびユーザー）は、\n// 以前にキャッシュされたリソースがバックグラウンドで更新されるため、\n// ページで開いている既存のタブがすべて閉じられた後、ページへの以降の\n// アクセスでのみ展開された更新が表示されます。\n\n// このモデルの利点とオプトイン方法の詳細については、\n// https://bit.ly/CRA-PWA をご覧ください。\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] は IPv6 localhost アドレスです。\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 は IPv4 のローカルホストと見なされます。\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // URLコンストラクターは、SWをサポートするすべてのブラウザーで使用できます。\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // PUBLIC_URL がページの配信元と異なる発信元にある場合サービスワーカーは機能しません。\n      // これは、アセットの提供にCDNが使用されている場合に発生する可能性があります。\n      // https://github.com/facebook/create-react-app/issues/2374 を参照してください\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // これはローカルホストで実行されています。 Service Workerがまだ存在するかどうかを確認しましょう。\n        checkValidServiceWorker(swUrl, config);\n\n        // いくつかの追加のログを localhost に追加し、開発者に\n        // service worker/PWA ドキュメントを参照させます。\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // ローカルホストではありません。サービスワーカーを登録するだけです。\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // この時点で更新された事前キャッシュされたコンテンツが取得されましたが、\n              // 以前のサービスワーカーは、すべてのクライアントタブが閉じられるまで\n              // 古いコンテンツを引き続き提供します。\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // コールバックを実行\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // この時点ですべてが事前にキャッシュされています。\n              // \"コンテンツはオフラインで使用するためにキャッシュされます。\"\n              // メッセージを表示するのに最適なタイミングです。\n              console.log('Content is cached for offline use.');\n\n              // コールバックを実行\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // ページをリロードできない場合、サービスワーカーが見つかるかどうかを確認します。\n  fetch(swUrl)\n    .then(response => {\n      // Service Worker が存在し、JSファイルを実際に取得していることを確認してください。\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // サービスワーカーが見つかりません。おそらく別のアプリ。ページをリロード。\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // サービスワーカーが見つかりました。通常どおり続行。\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nconst Endpoint = 'https://cors-anywhere.herokuapp.com/https://techbookfest.org/api';\n\nconst BoothToken = /^(.+?)([0-9]+)(.*)$/;\n\n// 配置を順番に\nfunction booth2order(booth) {\n  const spaceToken = [].concat(BoothToken.exec(booth)||['',0,'']).slice(1);\n  const spaceCategory = spaceToken[0].codePointAt(0);\n  return (\n    0x3041 <= spaceCategory && spaceCategory <= 0x3093\n      ? spaceCategory - 0x3041 + 10\n      : ['運','協'].indexOf(spaceToken[0])\n  ) * 1000 + +spaceToken[1];\n}\n\nexport default class CircleModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    // 保持している情報\n    this._store = {\n      orderBy: {\n        booth: [], // 配置順\n      },\n      lookupBy: {\n        booth: {}, // 配置をキーにサークルIDを引く\n      },\n      circles: {}, // サークルIDをキーにして収納されたサークルの情報\n    };\n\n    this._waitCircleList = null;\n  }\n\n  // サークルを要求\n  request(options) {\n    options = options || {};\n    options.circleId = options.circleId || null;\n\n    const eventId = 'tbf07';\n    let reqUrls = [];\n    let reqCircleList = false;\n\n    if (options.circleId) {\n      reqUrls.push(`${Endpoint}/circle/${options.circleId}`);\n    }\n    else {\n      this._waitCircleList = reqCircleList = true;\n      reqUrls.push(`${Endpoint}/circle?eventID=${eventId}&eventExhibitCourseID=3&visibility=site&limit=100&onlyAdoption=true`);\n    //  reqUrls.push(`${Endpoint}/circle?eventID=${eventId}&visibility=site&limit=100&onlyAdoption=true`);\n    }\n\n    // 情報を要求\n    const req = () => {\n      const reqUrl = reqUrls.shift();\n      if (!reqUrl) { // 取得完了\n        if (reqCircleList) { console.log('CircleModel request comp!');\n          this._waitCircleList = false;\n        }\n        this._event.emit('change');\n        this._event.emit('loaded');\n      }\n      else { // 取得継続中\n        fetch(reqUrl, {\n          method: 'GET'\n        }).then((res) => {\n          return res.json();\n        }).then((data) => {\n          if (data.cursor) { // 継続カーソルが存在するので次を追加\n            reqUrls.unshift(`${reqUrl.replace(/&cursor=.+$/,'')}&cursor=${data.cursor}`);\n          }\n\n          console.log('CircleModel request',data);\n\n          if (!data.list) {\n            const circleInfo = data;\n            // サークル情報更新\n            this._store.circles[circleInfo.id] = circleInfo;\n            // 配置からサークルIdを引くための情報を更新\n            for (let j = 0, space; space = circleInfo.spaces[j]; ++j) {\n              this._store.lookupBy.booth[space] = circleInfo.id;\n              if (this._store.orderBy.booth.indexOf(space) < 0) {\n                this._store.orderBy.booth.push(space);\n              }\n            }\n          }\n          else {\n            for (let i = 0, circleInfo; circleInfo = data.list[i]; ++i) {\n              // サークル情報更新\n              this._store.circles[circleInfo.id] = circleInfo;\n              // 配置からサークルIdを引くための情報を更新\n              for (let j = 0, space; space = circleInfo.spaces[j]; ++j) {\n                this._store.lookupBy.booth[space] = circleInfo.id;\n                if (this._store.orderBy.booth.indexOf(space) < 0) {\n                  this._store.orderBy.booth.push(space);\n                }\n              }\n            }\n          }\n\n          this._store.orderBy.booth = this._store.orderBy.booth.sort((a, b) => {\n            // 運＜協＜あ〜\n            const spaceOrderA = booth2order(a);\n            const spaceOrderB = booth2order(b);\n            return spaceOrderA - spaceOrderB;\n          });\n          \n          this._event.emit('change');\n\n          // 次を要求\n          return req();\n        }).catch((err) => {\n          return console.error(err);\n        });\n      }\n    };\n\n    req();\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n    if (0 <= ['change','loaded'].indexOf(name) &&\n        false === this._waitCircleList) {\n      listner(name);\n    }\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  getCircleListOrderByBooth() {\n    return (this._store.orderBy.booth||[]).map((boothNo) => {\n      const circleInfo = this.getCircleByBooth(boothNo) || {};\n      return circleInfo.id;\n    });\n  }\n\n  // サークル情報を配置から取得\n  getCircleByBooth(boothNo) {\n    return this._store.circles[\n      this._store.lookupBy.booth[\n        boothNo\n      ]\n    ];\n  }\n\n  // サークル情報を配置から取得\n  getCircleBoothOrder(circleId) {\n    if (false !== this._waitCircleList) {\n      return -2;\n    }\n    return this._store.orderBy.booth.indexOf(((this._store.circles[circleId]||{}).spaces||[])[0]);\n  }\n\n  // サークルを取得\n  getCircle(circleId) {\n    return false === this._waitCircleList && this._store.circles[circleId];\n  }\n\n  // 配置の一番最初を取得\n  getFirstBooth() {\n    return (\n      false === this._waitCircleList &&\n      this.getCircleByBooth(this._store.orderBy.booth[0])\n    );\n  }\n\n  // 配置の一番最後を取得\n  getLastBooth() {\n    return (\n      false === this._waitCircleList &&\n      this.getCircleByBooth(this._store.orderBy.booth[this._store.orderBy.booth.length - 1])\n    );\n  }\n\n  // 前のサークルを取得\n  getPrevSiblingsBooth(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    const boothNo = ((circleInfo||{}).spaces||[])[0]; // ToDo:配置が複数あり連続していない場合は... ループしそう...\n    const orderIndex = this._store.orderBy.booth.indexOf(boothNo);\n    return false === this._waitCircleList && this.getCircleByBooth(this._store.orderBy.booth[orderIndex - 1]);\n  }\n\n  // 次のサークルを取得\n  getNextSiblingsBooth(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    const boothNo = ((circleInfo||{}).spaces||[])[0]; // ToDo:配置が複数あり連続していない場合は... ループしそう...\n    const orderIndex = this._store.orderBy.booth.indexOf(boothNo);\n    return false === this._waitCircleList && this.getCircleByBooth(this._store.orderBy.booth[orderIndex + 1]);\n  }\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nconst Endpoint = 'https://cors-anywhere.herokuapp.com/https://techbookfest.org/api';\n\nexport default class ProductModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    // 保持している情報\n    this._store = {\n      orderBy: {\n        seq: {},\n      },\n      products: {}, // サークルIDをキーにして収納された本の情報\n    };\n  }\n\n  // 製品を要求\n  request(options) {\n    options = options || {};\n    options.circleId = options.circleId || null;\n\n    const eventId = 'tbf07';\n    let reqUrls = [];\n    let reqProductList = false;\n\n    if (options.circleId) {\n      reqUrls.push(`${Endpoint}/product?circleExhibitInfoID=${options.circleId}&limit=100`);\n    }\n    else {\n      return;\n    }\n\n    // 情報を要求\n    const req = () => {\n      const reqUrl = reqUrls.shift();\n      if (!reqUrl) { // 取得完了\n        if (reqProductList) { console.log('ProductModel request comp!');\n          this._waitProductList = false;\n        }\n        this._event.emit('change');\n        this._event.emit('loaded');\n      }\n      else { // 取得継続中\n        fetch(reqUrl, {\n          method: 'GET'\n        }).then((res) => {\n          return res.json();\n        }).then((data) => {\n          if (data.cursor) { // 継続カーソルが存在するので次を追加\n            reqUrls.unshift(`${reqUrl.replace(/&cursor=.+$/,'')}&cursor=${data.cursor}`);\n          }\n\n          console.log('ProductModel request',data);\n\n          if (data.list) {\n            for (let i = 0, productInfo; productInfo = data.list[i]; ++i) {\n              // サークル情報更新\n              const circleId = productInfo.circleExhibitInfoID;\n              this._store.products[circleId] = this._store.products[circleId] || {};\n              this._store.products[circleId][productInfo.id] = productInfo;\n              this._store.orderBy.seq[circleId] = this._store.orderBy.seq[circleId] || [];\n              this._store.orderBy.seq[circleId][productInfo.seq-1] = productInfo.id;\n            }\n          }\n\n          this._event.emit('change');\n\n          // 次を要求\n          return req();\n        }).catch((err) => {\n          return console.error(err);\n        });\n      }\n    };\n\n    req();\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  // 製品を取得\n  getProductOrder(circleId, productId) {\n    const orderBySeq = this._store.orderBy.seq[circleId] || [];\n    return orderBySeq ? orderBySeq.indexOf(productId) : -1;\n  }\n\n  // 製品を取得\n  getProductList(circleId) {\n    const products = this._store.products[circleId];\n    return products && Object.keys(products);\n  }\n\n  // 製品を取得\n  getProductByIndex(circleId, index) {\n    const products   = this._store.products[circleId] || {};\n    const orderBySeq = this._store.orderBy.seq[circleId] || [];\n    return products[orderBySeq[index]] || false;\n  }\n\n  // 製品を取得\n  getProduct(circleId, productId) {\n    const product = (this._store.products[circleId] || {})[productId] || false;\n    return product;\n  }\n\n  // 製品を取得\n  getProductCount(circleId) {\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    return orderBySeq ? orderBySeq.length : -1;\n  }\n\n  // 前の製品を取得\n  getPrevSiblings(circleId, productId) {\n    const products   = this._store.products[circleId];\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    const indexBySeq = orderBySeq && orderBySeq.indexOf(productId);\n    return orderBySeq && products[orderBySeq[indexBySeq - 1]] || false;\n  }\n\n  // 次の製品を取得\n  getNextSiblings(circleId, productId) {\n    const products   = this._store.products[circleId];\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    const indexBySeq = orderBySeq && orderBySeq.indexOf(productId);console.log('getNextSiblings',orderBySeq,products);\n    return orderBySeq && products[orderBySeq[indexBySeq + 1]] || false;\n  }\n\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nconst KeyLocalStorage = 'favorite';\n\nconst eventId = 'tbf07';\n\nexport default class FavoriteModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    // 保持している情報\n    this._store = JSON.parse(localStorage.getItem(KeyLocalStorage) || '{}');\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  isFavorite(circleId, productId) {\n    return !!(productId\n      ? (this._store[eventId] && this._store[eventId][circleId] && this._store[eventId][circleId][productId])\n      : (this._store[eventId] && this._store[eventId][circleId] && this._store[eventId][circleId]['circle'])\n    );\n  }\n\n  setFavorite(circleId, productId) { console.log('setFavorite', circleId, productId);\n    if (circleId) {\n      this._store[eventId] = this._store[eventId] || {};\n      this._store[eventId][circleId] = this._store[eventId][circleId] || { 'circle': null };\n      const key = productId ? productId : 'circle';\n      const updated = true !== this._store[eventId][circleId][key];\n      this._store[eventId][circleId][key] = true;\n      if (updated) {\n        localStorage.setItem(KeyLocalStorage, JSON.stringify(this._store));\n        this._event.emit('change', { circleId: circleId, productId: productId, favorite: true });\n      }\n    }\n  }\n\n  unsetFavorite(circleId, productId) { console.log('unsetFavorite', circleId, productId);\n    if (circleId) {\n      this._store[eventId] = this._store[eventId] || {};\n      this._store[eventId][circleId] = this._store[eventId][circleId] || { 'circle': null };\n      const key = productId ? productId : 'circle';\n      const updated = true === this._store[eventId][circleId][key];\n      delete this._store[eventId][circleId][key];\n      if (updated) {\n        localStorage.setItem(KeyLocalStorage, JSON.stringify(this._store));\n        this._event.emit('change', { circleId: circleId, productId: productId, favorite: false });\n      }\n    }\n  }\n\n}\n","\"use struct\";\n\nimport React from 'react';\nimport { BrowserRouter as Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction EventSelectView() {\n  return (\n    <div>\n      <LinkContainer to=\"/7/circle/\">\n        <Button>技術書典７</Button>\n      </LinkContainer>\n    </div>\n  );\n}\n\nexport default EventSelectView;\n","\n\"use struct\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar as faStarChecked } from '@fortawesome/free-solid-svg-icons'\nimport { faStar as faStarUnchecked } from '@fortawesome/free-regular-svg-icons'\n\n// 製品表示用\nfunction FavoriteStar({ models, circleId, productId }) {\n  const { favorite } = models;\n\n  const [ favorited,  setFavorited ] = useState(favorite.isFavorite(circleId, productId));\n\n  const setFavorite   = useCallback(() => favorite.setFavorite(circleId, productId), []);\n  const unsetFavorite = useCallback(() => favorite.unsetFavorite(circleId, productId), []);\n\n  useEffect(() => {//console.log('CircleSelectView','useEffect');\n    const onFavoriteChange = (params) => {\n      if (circleId == params.circleId && productId == params.productId) {\n        setFavorited(params.favorite);\n      }\n    };\n    // 通知先を登録\n    favorite.on('change',onFavoriteChange);\n    // クリーンアップ関数を返す\n    return () => {\n      favorite.off('change',onFavoriteChange);\n    };\n  }, [favorite, circleId, productId]);\n\n  return (\n    <div style={{\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      padding: '.75rem',\n    }}\n    onClick={favorited ? unsetFavorite : setFavorite}\n    >\n      <FontAwesomeIcon\n        icon={favorited ? faStarChecked : faStarUnchecked}\n        color={\"#ffcc00\"}\n        size=\"lg\"\n        onClick={favorited ? unsetFavorite : setFavorite}\n      />\n    </div>\n  );\n}\n\nexport default FavoriteStar;\n","\"use struct\";\n\nimport React from 'react';\n\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Form from 'react-bootstrap/Form'\n\nimport FavoriteStart from './FavoriteStart'\n\n// サークル表示用\nfunction CircleCard({ models, circleInfo }) {\n  const circleCut = circleInfo && circleInfo.circleCutImage || { url: '', width: 0, height: 1 };\n  return (\n    <div className='circle-card'>\n      <Card >\n        <Card.Header>\n          <Badge variant=\"secondary\">{(circleInfo.spaces||[])[0]}</Badge>\n          {circleInfo.name||' '}\n          <FavoriteStart models={models}\n            circleId={circleInfo && circleInfo.id} />\n        </Card.Header>\n        <div style={{ width: '100%', textAlign: 'center', marginTop: '8px' }} >\n          {circleCut.url && <Card.Img\n            variant=\"top\"\n            src={circleCut.url}\n            style={{\n              width:  circleCut.width * 200 / circleCut.height,\n              height: 200,\n            }}\n          />}\n          {!circleCut.url && <div\n            style={{\n              display: 'inline-block',\n              width:  141,\n              height: 200,\n              border: '5px solid black',\n              overflow: 'hidden'\n            }}\n          >\n            <div style={{ top: '50%', position: 'relative', marginTop: '-0.5em', }}>\n              NO IMAGE\n            </div>\n          </div>}\n        </div>\n        <Card.Body>\n          <Card.Text>\n            <Form>\n              <Form.Group controlId=\"name\">\n                <Form.Label>サークル名</Form.Label>\n                <div className='form-control-plaintext' >{!circleInfo.nameRuby?circleInfo.name:`${circleInfo.name}(${circleInfo.nameRuby})`}</div>\n              </Form.Group>\n              <Form.Group controlId=\"spaces\">\n                <Form.Label>配置</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.spaces&&circleInfo.spaces[0]||''}</div>\n              </Form.Group>\n              <Form.Group controlId=\"penName\">\n                <Form.Label>ペンネーム</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.penName}</div>\n              </Form.Group>\n              <Form.Group controlId=\"webSiteURL\">\n                <Form.Label>Webサイト</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.webSiteURL}</div>\n              </Form.Group>\n              <Form.Group controlId=\"genre\">\n                <Form.Label>ジャンル</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.genre}</div>\n              </Form.Group>\n              <Form.Group controlId=\"genreFreeFormat\">\n                <Form.Label>ジャンル詳細</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.genreFreeFormat}</div>\n              </Form.Group>\n            </Form>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default CircleCard;\n","\"use struct\";\n\nimport React from 'react';\n\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Form from 'react-bootstrap/Form'\n\nimport FavoriteStart from './FavoriteStart'\n\nconst Type2Text = {\n  'fanzine':  '同人誌',\n  'commerce': '商業誌',\n};\n\n// 製品表示用\nfunction ProductCard({ models, circleInfo, productInfo }) {\n  const firstImage = productInfo && productInfo.images && productInfo.images[0] || { url: '', width: 0, height: 1 };\n  return (\n    <div className='product-card'>\n      <Card >\n        <Card.Header>\n          <Badge variant=\"secondary\">{(circleInfo.spaces||[])[0]}</Badge>\n          {circleInfo.name||' '}\n          <FavoriteStart models={models}\n            circleId={circleInfo && circleInfo.id} productId={productInfo && productInfo.id} />\n        </Card.Header>\n        {false&&<Card.Header>\n          {productInfo.name||' '}\n        </Card.Header>}\n        <div style={{ width: '100%', textAlign: 'center', marginTop: '8px' }} >\n          {firstImage.url && <Card.Img\n            variant=\"top\"\n            src={firstImage.url}\n            style={{\n              width:  firstImage.width * 200 / firstImage.height,\n              height: 200,\n            }}\n          />}\n        </div>\n        <Card.Body>\n          <Card.Text>\n            <Form>\n            <Form.Group controlId=\"name\">\n                  <Form.Label>頒布物</Form.Label>\n                  <div className='form-control-plaintext' >{productInfo.name}</div>\n                </Form.Group>\n                <Form.Group controlId=\"page\">\n                  <Form.Label>種類 / ページ / 価格</Form.Label>\n                  <div className='form-control-plaintext' >{`${Type2Text[productInfo.type]} / ${productInfo.page} ページ / ${productInfo.price?productInfo.price+' 円':''}`}</div>\n                </Form.Group>\n                <Form.Group controlId=\"firstAppearanceEventName\">\n                  <Form.Label>初出</Form.Label>\n                  <div className='form-control-plaintext' >{productInfo.firstAppearanceEventName}</div>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                  <Form.Label>概要</Form.Label>\n                  <pre className='form-control-plaintext' >{productInfo.description}</pre>\n                </Form.Group>\n              </Form>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","\"use struct\";\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleLeft, faAngleRight, faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\n\nimport CircleCard from '../components/CircleCard'\nimport ProductCard from '../components/ProductCard'\n\nconst CarouselButtonNormalStyle = { background: 'transparent', border: '0px solid transparent' };\nconst CarouselButtonHiddenStyle = Object.assign({ display: 'none' }, CarouselButtonNormalStyle);\n\nfunction CircleSelectView({ models, history, params }) {\n  const { circle, product } = models;\n  const { event, circleId, productId } = params;\n  //console.log('CircleSelectView',{models, history, params});\n\n  const [ circleList,  setCircleList  ] = useState();\n  const [ circleInfo,  setCircleInfo  ] = useState();\n  const [ productList, setProductList ] = useState();\n  const [ productInfo, setProductInfo ] = useState();\n\n  useEffect(() => {\n    const circleInfo_ = circle.getCircle(circleId);\n    circleInfo_ ? setCircleInfo(circleInfo_)\n                : circle.request({ circleId: circleId });\n    //\n    const productList_ = product.getProductList(circleId);\n    productList_ ? setProductList(productList)\n                 : product.request({ circleId: circleId });\n  }, [circle, circleId]);\n\n  useEffect(() => {\n    if (circleId) {\n      const productInfo_ = product.getProduct(circleId, productId);\n      productInfo_ ? setProductInfo(productInfo_)\n                   : product.request({ circleId: circleId });\n    }\n  }, [circleId, product, productId]);\n\n  useEffect(() => {//console.log('CircleSelectView','useEffect');\n    const onCircleChange = () => {\n      //console.log('CircleSelectView','onCircleChange',circleId,circle.getCircle(circleId));\n      if (!circleId) {\n        // サークルを選択していない場合は一番初めのサークルの飛ぶ\n        const firstCircleInfo = circle.getFirstBooth();\n        if (firstCircleInfo) {\n          history.replace(`/${event}/circle/${firstCircleInfo.id}`);\n        }\n      }\n      else {\n        // 今のサークルを表示\n        setCircleList(circle.getCircleListOrderByBooth());\n        setCircleInfo(circle.getCircle(circleId));\n        setProductList(product.getProductList(circleId));\n        setProductInfo(product.getProduct(circleId, productId));\n      }\n    };\n    const onCircleLoaded = () => {\n      //console.log('CircleSelectView','onCircleLoaded',circleId,circle.getCircle(circleId));\n      // サークルの製品を取得\n        setCircleList(circle.getCircleListOrderByBooth());\n        setCircleInfo(circle.getCircle(circleId));\n        setProductList(product.getProductList(circleId));\n        setProductInfo(product.getProduct(circleId, productId));\n    };\n    const onProductChange = () => {\n      //console.log('CircleSelectView','onProductChange',circleId,productId,product.getProduct(circleId, productId));\n      setProductList(product.getProductList(circleId));\n      setProductInfo(product.getProduct(circleId, productId));\n    };\n    const onProductLoaded = () => {\n      //console.log('CircleSelectView','onProductLoaded',circleId,productId,product.getProduct(circleId, productId));\n      setProductList(product.getProductList(circleId));\n      setProductInfo(product.getProduct(circleId, productId));\n    };\n    // 通知先を登録\n    circle.on('change',onCircleChange);\n    circle.on('loaded',onCircleLoaded);\n    product.on('change',onProductChange);\n    product.on('loaded',onProductLoaded);\n    // クリーンアップ関数を返す\n    return () => {\n      circle.off('change',onCircleChange);\n      circle.off('loaded',onCircleLoaded);\n      product.off('change',onProductChange);\n      product.off('loaded',onProductLoaded);\n    };\n  }, [event, circle, product, circleId, productId, history]);\n  //console.log('circleInfo',circleId,circleInfo,circle.getCircleBoothOrder(circleId));\n  //console.log('circleList',circleList);\n\n  //const circleList  = circle.getCircleListOrderByBooth() || [];\n  //const productList = [null].concat(product.getProductList(circleId) || []);\n  \n  const circleList_  = circleList || [];\n  const curCircleIndex = circle.getCircleBoothOrder(circleId);\n  const productList_ = [null].concat(productList || []);\n  const curProductIndex = product.getProductOrder(circleId, productId)+1;\n\n  //console.log('>>>>',[circleList,circleId,circleInfo,productList,productId,productInfo,product.getProductOrder(circleId, productId)]);\n  return (\n    <CarouselProvider\n        className='circle-list'\n        naturalSlideWidth={window.innerWidth}\n        naturalSlideHeight={window.innerHeight}\n        totalSlides={circleList_.length}\n        currentSlide={curCircleIndex}\n      >\n        <Slider onMasterSpinner={(...args)=>{console.log('>>>',args);}} >\n          {circleList_.map((circleId_, index) => {\n            const circleInfo_ = circleInfo && circleInfo.id ==  circleId_ ? circleInfo : { id: circleId_ };\n            return (\n              <Slide key={`_${circleId_}_${index}`} index={index}>\n                <CarouselProvider\n                  orientation='vertical'\n                  key={`_${circleId_}_carousel_${index}`}\n                  className='product-list'\n                  naturalSlideWidth={window.innerWidth}\n                  naturalSlideHeight={window.innerHeight}\n                  totalSlides={productList_.length}\n                  currentSlide={curProductIndex}\n                >\n                  <Slider>\n                    {productList_.map((productId_, index) => {\n                      //console.log('>>',[(circleInfo||{}).id,circleId_,circleId]);\n                      const productInfo_ = productInfo && productInfo.id ==  productId_ ? productInfo : { id: productId_ };\n                      return (\n                        <Slide key={`_${circleId_}_${productId}_${index}`} index={index}>\n                          {!productInfo_.name\n                            ? <CircleCard\n                                key={`_${circleId_}_${productId}_item_${index}`}\n                                models={models}\n                                circleInfo={circleInfo_}\n                              />\n                            : <ProductCard\n                                key={`_${circleId_}_${productId}_item_${index}`}\n                                models={models}\n                                circleInfo={circleInfo_}\n                                productInfo={productInfo_}\n                              />\n                          }\n                        </Slide>\n                      );\n                    })}\n                  </Slider>\n                  <ButtonBack\n                    style={curProductIndex - 1 < 0 ? CarouselButtonHiddenStyle : CarouselButtonNormalStyle}\n                    onClick={() => {console.log('ButtonTop');\n                      const prevProduct = product.getPrevSiblings(circleId, productId);\n                      history.push(\n                        prevProduct\n                          ? `/${event}/circle/${circleId}/${prevProduct.id}`\n                          : `/${event}/circle/${circleId}`\n                        );\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faAngleUp} color={\"black\"} size=\"3x\"  />\n                  </ButtonBack>\n                  <ButtonNext\n                    style={productList_.length <= curProductIndex + 1 ? CarouselButtonHiddenStyle : CarouselButtonNormalStyle}\n                    onClick={() => {console.log('ButtonButton');\n                      const nextProduct = product.getNextSiblings(circleId, productId);\n                      history.push(\n                        nextProduct\n                          ? `/${event}/circle/${circleId}/${nextProduct.id}`\n                          : `/${event}/circle/${circleId}`\n                        );\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faAngleDown} color={\"black\"} size=\"3x\" />\n                  </ButtonNext>\n                </CarouselProvider>\n              </Slide>\n            );\n          })}\n        </Slider>\n        <ButtonBack\n          style={curCircleIndex - 1 < 0 ? CarouselButtonHiddenStyle : CarouselButtonNormalStyle}\n          onClick={() => {console.log('ButtonBack');\n            const prevCircle = circle.getPrevSiblingsBooth(circleId);\n            history.push(`/${event}/circle/${prevCircle.id}`);\n          }}\n        >\n          <FontAwesomeIcon icon={faAngleLeft} color={\"black\"} size=\"3x\"  />\n        </ButtonBack>\n        <ButtonNext\n          style={circleList_.length <= curCircleIndex + 1 ? CarouselButtonHiddenStyle : CarouselButtonNormalStyle}\n          onClick={() => {console.log('ButtonNext');\n            const nextCircle = circle.getNextSiblingsBooth(circleId);\n            history.push(`/${event}/circle/${nextCircle.id}`);\n          }}\n        >\n          <FontAwesomeIcon icon={faAngleRight} color={\"black\"} size=\"3x\" />\n        </ButtonNext>\n      </CarouselProvider>\n  );\n\n}\n\nexport default CircleSelectView;\n","\"use struct\";\n\nimport React from 'react';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport EventSelectView  from './views/EventSelect';\nimport CircleSelectView from './views/CircleSelect';\n\nfunction App({ models }) {\n  return (\n    <Router>\n      {false&&<nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about/\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/users/\">Users</Link>\n          </li>\n        </ul>\n      </nav>}\n\n      <Route\n        path=\"/\" exact\n        render={(router) => \n          <EventSelectView\n            models={models}\n            history={router.history}\n            params={router.match.params}\n          />}\n      />\n      <Route\n        path=\"/:event/circle/:circleId?/:productId?\"\n        render={(router) => \n          <CircleSelectView\n            models={models}\n            history={router.history}\n            params={router.match.params}\n          />}\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","\"use struct\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport CircleModel from './models/Circle';\nimport ProductModel from './models/Product';\nimport FavoriteModel from './models/Favorite';\n\nimport App from './App';\n\n\nconst models = {\n  circle:  new CircleModel(),\n  product: new ProductModel(),\n  favorite: new FavoriteModel(),\n};\n\nmodels.circle.request();\n\nReactDOM.render(\n  <App models={models} />,\n  document.getElementById('root')\n);\n\n// アプリをオフラインで動作させてより速くロードしたい場合は、以下で unregister() を\n// register() に変更できます。これにはいくつかの落とし穴があります。\n// サービスワーカーの詳細: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\n// 要求スペック\n//   config#onUpdate(registration);\n//   config#onSuccess(registration);\n// serviceWorker.register(config);\n"],"sourceRoot":""}