{"version":3,"sources":["serviceWorker.js","models/Circle.js","models/Product.js","models/Favorite.js","views/EventSelect.js","components/FavoriteStar.js","components/ExternalLink.js","components/CircleCard.js","components/ProductCard.js","components/EmptyCard.js","components/HamburgerMenuButton.js","views/CircleSelect.js","components/MessageBox.js","views/FavoriteImport.js","views/FavoriteList.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","EventEmitter","require","Endpoint","BoothToken","KeyLocalStorageOld","KeyLocalStoragePrefix","booth2order","booth","spaceToken","concat","exec","slice","spaceCategory","codePointAt","indexOf","CircleModel","this","_event","_waitRequest","_waitRequestList","_store","_getDefault","sessionStorage","removeItem","i","length","key","substr","circleInfo","JSON","parse","getItem","id","_updateCircle","e","orderBy","sort","a","b","loadCompleted","lookupBy","circles","noSave","event","eventExhibitCourse","space","j","undefined","spaces","push","setItem","stringify","options","circleId","reqUrls","reqInfo","console","debug","req","reqUrl","shift","fetch","method","then","res","json","data","cursor","unshift","replace","list","emit","catch","err","error","name","listner","on","removeListener","map","boothNo","getCircleByBooth","prevCircleExhibitInfoID","nextCircleExhibitInfoID","favList","reqList","forEach","favItem","circleName","Object","keys","request","ProductModel","_reqWait","productInfo","reqCircleId","products","seq","circleExhibitInfoID","productId","orderBySeq","index","indexBySeq","productName","productPrice","price","FileDownload","KeyLocalStorage","FavoriteModel","localStorage","updated","favorite","text","eventId_","hasProduct","circleList","productList","eventId","reduce","r","EventSelectView","to","Button","FavoriteStar","models","isCurrent","useState","isFavorite","favorited","setFavorited","setFavorite","useCallback","unsetFavorite","useEffect","onFavoriteChange","params","off","style","marginLeft","onClick","icon","faStarChecked","faStarUnchecked","color","size","ExternalLink","handleOpenLink","open","faExternalLinkAlt","CircleCard","circleCut","circleCutImage","url","width","height","className","Header","variant","textAlign","marginTop","Img","src","display","border","overflow","top","position","Body","Group","controlId","Label","nameRuby","penName","webSiteURL","genre","whiteSpace","genreFreeFormat","Type2Text","ImageSize","ProductCard","firstImage","images","justifyContent","alignItems","assign","type","page","join","firstAppearanceEventName","description","EmptyCard","Spinner","animation","HamburgerMenuButton","props","context","handleClick","bind","preventDefault","href","faBars","React","Component","CircleSelectView","history","circle","product","setCircleList","setCircleInfo","setProductList","setProductInfo","handleFavoriteList","handleFavoriteSave","export","handleFavoriteLoad","handleClearCache","clearCache","circleInfo_","getCircle","getProductList","productInfo_","getProduct","onCircleChange","getCircleListOrderByBooth","firstCircleInfo","getFirstBooth","onCircleLoaded","onProductChange","onProductLoaded","Dropdown","Toggle","as","Menu","Item","eventKey","onSelect","Divider","hasPrevCircle","prevCircleId","getPrevCircleId","faAngleLeft","hasNextCircle","nextCircleId","getNextCircleId","faAngleRight","prevProduct","getPrevSiblings","faAngleUp","hasNextProduct","nextProduct","getNextSiblings","faAngleDown","MessageBox","title","message","onClose","show","setShow","handleClose","Modal","onHide","closeButton","Title","Footer","MsgImportSuccess","MsgImportFailed","FavoriteImportView","setMessage","useDropzone","accept","acceptedFiles","rejectedFiles","getRootProps","getInputProps","rejectedFilesItems","file","path","handleImportClick","reader","FileReader","onload","import","target","result","readAsText","handleBackClick","goBack","handleMessageCloseWithBack","ButtonToolbar","disabled","FavoriteListView","setFavList","withUnknown","priceTotal","setPriceTotal","updateFavList","mergeFavorite","Table","striped","bordered","padding","colSpan","App","exact","render","router","EventSelect","CircleSelect","FavoriteImport","FavoriteList","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.532bae78.chunk.js","sourcesContent":["\"use struct\";\n\n// このオプションのコードは、Service Workerを登録するために使用されます。\n// register() はデフォルトでは呼び出されません。\n\n// これにより、その後の実稼働時のアクセスでアプリの読み込みが速くなり、\n// オフライン機能が提供されます。 ただし、開発者（およびユーザー）は、\n// 以前にキャッシュされたリソースがバックグラウンドで更新されるため、\n// ページで開いている既存のタブがすべて閉じられた後、ページへの以降の\n// アクセスでのみ展開された更新が表示されます。\n\n// このモデルの利点とオプトイン方法の詳細については、\n// https://bit.ly/CRA-PWA をご覧ください。\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] は IPv6 localhost アドレスです。\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 は IPv4 のローカルホストと見なされます。\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // URLコンストラクターは、SWをサポートするすべてのブラウザーで使用できます。\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // PUBLIC_URL がページの配信元と異なる発信元にある場合サービスワーカーは機能しません。\n      // これは、アセットの提供にCDNが使用されている場合に発生する可能性があります。\n      // https://github.com/facebook/create-react-app/issues/2374 を参照してください\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // これはローカルホストで実行されています。 Service Workerがまだ存在するかどうかを確認しましょう。\n        checkValidServiceWorker(swUrl, config);\n\n        // いくつかの追加のログを localhost に追加し、開発者に\n        // service worker/PWA ドキュメントを参照させます。\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // ローカルホストではありません。サービスワーカーを登録するだけです。\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // この時点で更新された事前キャッシュされたコンテンツが取得されましたが、\n              // 以前のサービスワーカーは、すべてのクライアントタブが閉じられるまで\n              // 古いコンテンツを引き続き提供します。\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // コールバックを実行\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // この時点ですべてが事前にキャッシュされています。\n              // \"コンテンツはオフラインで使用するためにキャッシュされます。\"\n              // メッセージを表示するのに最適なタイミングです。\n              console.log('Content is cached for offline use.');\n\n              // コールバックを実行\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // ページをリロードできない場合、サービスワーカーが見つかるかどうかを確認します。\n  fetch(swUrl)\n    .then(response => {\n      // Service Worker が存在し、JSファイルを実際に取得していることを確認してください。\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // サービスワーカーが見つかりません。おそらく別のアプリ。ページをリロード。\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // サービスワーカーが見つかりました。通常どおり続行。\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nconst Endpoint = 'https://api-gw98.herokuapp.com/https://techbookfest.org/api';\n\nconst BoothToken = /^(.+?)([0-9]+)(.*)$/; // 配置を、種別\b、番号、フロア に分割するための正規表現\n\nconst KeyLocalStorageOld = 'circle-cache';\nconst KeyLocalStoragePrefix = 'c:';\n\n// 配置を順番に\nfunction booth2order(booth) {\n  const spaceToken = [].concat(BoothToken.exec(booth)||['',0,'']).slice(1);\n  const spaceCategory = spaceToken[0].codePointAt(0);\n  return (\n    0x3041 <= spaceCategory && spaceCategory <= 0x3093\n      ? spaceCategory - 0x3041 + 10\n      : ['運','協'].indexOf(spaceToken[0])\n  ) * 1000 + +spaceToken[1];\n}\n\nexport default class CircleModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    this._waitRequest = {};\n    this._waitRequestList = false;\n\n    // 保持している情報\n    this._store = this._getDefault();\n\n    // 古いキャッシュを削除\n    sessionStorage.removeItem(KeyLocalStorageOld);\n\n    // セッションからの復帰\n    for (let i = 0; i < sessionStorage.length; i++) {\n      try {\n        const key = sessionStorage.key(i);\n        if (KeyLocalStoragePrefix === key.substr(0, KeyLocalStoragePrefix.length)) {\n          let circleInfo = JSON.parse(sessionStorage.getItem(key));\n          if (circleInfo && circleInfo.id) {\n            this._updateCircle(circleInfo, true);\n          }\n        }\n      }\n      catch (e) {}\n    }\n    this._store.orderBy.booth = this._store.orderBy.booth.sort((a, b) => {\n      // 運＜協＜あ〜\n      const spaceOrderA = booth2order(a);\n      const spaceOrderB = booth2order(b);\n      return spaceOrderA - spaceOrderB;\n    });\n  }\n\n  _getDefault() {\n    return {\n      loadCompleted: false,\n      orderBy: {\n        booth: [], // 配置順\n      },\n      lookupBy: {\n        booth: {}, // 配置をキーにサークルIDを引く\n      },\n      circles: {}, // サークルIDをキーにして収納されたサークルの情報\n    };\n  }\n\n  _updateCircle(circleInfo, noSave) {\n    // サークル情報更新\n    delete circleInfo.event;\n    delete circleInfo.eventExhibitCourse;\n    this._store.circles[circleInfo.id] = circleInfo;\n    // 配置からサークルIdを引くための情報を更新\n    for (let j = 0, space; undefined !== (space = circleInfo.spaces[j]); ++j) {\n      this._store.lookupBy.booth[space] = circleInfo.id;\n      if (this._store.orderBy.booth.indexOf(space) < 0) {\n        this._store.orderBy.booth.push(space);\n      }\n    }\n    if (!noSave) {\n      sessionStorage.setItem(\n        KeyLocalStoragePrefix+circleInfo.id,\n        JSON.stringify(circleInfo)\n      );\n    }\n  }\n\n  // サークルを要求\n  request(options) {\n    options = options || {};\n    options.circleId = options.circleId || null;\n\n    const eventId = 'tbf07';\n    let reqUrls = [];\n    let reqInfo = false;\n\n    if (options.circleId) { // 特定のサークルのみ取得\n      if (this._waitRequest[options.circleId]) { // 要求中なので何もしない\n        console.debug(`request wait for ${options.circleId}`);\n        return;\n      }\n      if (this._store.circles[options.circleId]) {\n        console.debug(`use cache for ${options.circleId}`);\n        return;\n      }\n      reqUrls.push(`${Endpoint}/circle/${options.circleId}`);\n      this._waitRequest[options.circleId] = true;\n      reqInfo = options.circleId;\n    }\n    else { // 全てのサークルを取得\n      if (0&&this._store.loadCompleted && !options.force) {\n        this._waitRequestList = false;\n        console.debug('circle list uses cache');\n        this._event.emit('change');\n        this._event.emit('loaded');\n        return;\n      }\n      this._waitRequestList = reqInfo = true;\n      this._store.loadCompleted = false;\n      reqUrls.push(`${Endpoint}/circle?eventID=${eventId}&eventExhibitCourseID=3&visibility=site&limit=100&onlyAdoption=true`);\n      //reqUrls.push(`${Endpoint}/circle?eventID=${eventId}&visibility=site&limit=100&onlyAdoption=true`);\n    }\n\n    // 情報を要求\n    const req = () => {\n      const reqUrl = reqUrls.shift();\n      if (!reqUrl) { // 取得完了\n        if (true === reqInfo) { //console.log('CircleModel request comp!');\n          this._waitRequestList = false;\n          this._store.loadCompleted = true;\n        }\n        else {\n          delete this._waitRequest[reqInfo];\n        }\n        this._event.emit('change');\n        this._event.emit('loaded');\n      }\n      else { // 取得継続中\n        fetch(reqUrl, {\n          method: 'GET'\n        }).then((res) => {\n          return res.json();\n        }).then((data) => {\n          if (data.cursor) { // 継続カーソルが存在するので次を追加\n            reqUrls.unshift(`${reqUrl.replace(/&cursor=.+$/,'')}&cursor=${data.cursor}`);\n          }\n\n          //console.log('CircleModel request',data);\n\n          if (!data.list) {\n            this._updateCircle(data);\n          }\n          else {\n            for (let i = 0, circleInfo;\n                undefined !== (circleInfo = data.list[i]); ++i) {\n              this._updateCircle(circleInfo);\n            }\n          }\n\n          this._store.orderBy.booth = this._store.orderBy.booth.sort((a, b) => {\n            // 運＜協＜あ〜\n            const spaceOrderA = booth2order(a);\n            const spaceOrderB = booth2order(b);\n            return spaceOrderA - spaceOrderB;\n          });\n          \n          this._event.emit('change');\n\n          // 次を要求\n          return req();\n        }).catch((err) => {\n          return console.error(err);\n        });\n      }\n    };\n\n    req();\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n    if (0 <= ['change','loaded'].indexOf(name) &&\n        false === this._waitRequestList) {\n      listner(name);\n    }\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  getCircleListOrderByBooth() {\n    return (this._store.orderBy.booth||[]).map((boothNo) => {\n      const circleInfo = this.getCircleByBooth(boothNo) || {};\n      return circleInfo.id;\n    });\n  }\n\n  // サークル情報を配置から取得\n  getCircleByBooth(boothNo) {\n    return this._store.circles[\n      this._store.lookupBy.booth[\n        boothNo\n      ]\n    ];\n  }\n\n  // サークル情報を配置から取得\n  getCircleBoothOrder(circleId) {\n    if (false !== this._waitRequestList) {\n      return -2;\n    }\n    return this._store.orderBy.booth.indexOf(((this._store.circles[circleId]||{}).spaces||[])[0]);\n  }\n\n  // サークルを取得\n  getCircle(circleId) {\n    return this._store.circles[circleId];\n  }\n\n  // 配置の一番最初を取得\n  getFirstBooth() {\n    return (\n      false === this._waitRequestList &&\n      this.getCircleByBooth(this._store.orderBy.booth[0])\n    );\n  }\n\n  // 配置の一番最後を取得\n  getLastBooth() {\n    return (\n      false === this._waitRequestList &&\n      this.getCircleByBooth(this._store.orderBy.booth[this._store.orderBy.booth.length - 1])\n    );\n  }\n\n  // 前のサークルがあるか？\n  hasPrevCircle(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return !!(circleInfo && circleInfo.prevCircleExhibitInfoID);\n  }\n\n  // 次のサークルがあるか？\n  hasNextCircle(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return !!(circleInfo && circleInfo.nextCircleExhibitInfoID);\n  }\n\n  // 前のサークルを取得\n  getPrevCircle(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return circleInfo && circleInfo.prevCircleExhibitInfoID && this._store.circles[circleInfo.prevCircleExhibitInfoID];\n  }\n\n  // 次のサークルを取得\n  getNextCircle(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return circleInfo && circleInfo.nextCircleExhibitInfoID && this._store.circles[circleInfo.nextCircleExhibitInfoID];\n  }\n\n  // 前のサークルを取得\n  getPrevCircleId(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return circleInfo && circleInfo.prevCircleExhibitInfoID;\n  }\n\n  // 次のサークルを取得\n  getNextCircleId(circleId) {\n    const circleInfo = this._store.circles[circleId];\n    return circleInfo && circleInfo.nextCircleExhibitInfoID;\n  }\n\n  mergeFavorite(favList) {\n    let reqList = {};\n    favList.forEach(favItem => {\n      if (favItem.circleId) {\n        const circleInfo = this._store.circles[favItem.circleId];\n        if (!circleInfo) {\n          reqList[favItem.circleId] = true;\n          return;\n        }\n        favItem.space       = circleInfo.spaces[0];\n        favItem.circleName  = circleInfo.name;\n      }\n    });\n    // 足りないものを要求\n    Object.keys(reqList).forEach((circleId) => {\n      this.request({ circleId });\n    });\n  }\n\n  clearCache() {\n    for (let i = 0; i < sessionStorage.length; i++) {\n      const key = sessionStorage.key(i);\n      if (KeyLocalStoragePrefix === key.substr(0, KeyLocalStoragePrefix.length)) {\n        sessionStorage.removeItem(key);\n      }\n    }\n    this._store = this._getDefault();\n    this._event.emit('change');\n  }\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\n\nconst Endpoint = 'https://api-gw98.herokuapp.com/https://techbookfest.org/api';\n\nconst KeyLocalStoragePrefix = 'p:';\n\nexport default class ProductModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    // 保持している情報\n    this._store = this._getDefault();\n    this._reqWait = {};\n\n    // セッションからの復帰\n    for (let i = 0; i < sessionStorage.length; i++) {\n      try {\n        const key = sessionStorage.key(i);\n        if (KeyLocalStoragePrefix === key.substr(0, KeyLocalStoragePrefix.length)) {\n          let productInfo = JSON.parse(sessionStorage.getItem(key));\n          if (productInfo && productInfo.id) {\n            this._updateCircle(productInfo, true);\n          }\n        }\n      }\n      catch (e) {}\n    }\n  }\n\n  // 製品を要求\n  request(options) {\n    options = options || {};\n    options.circleId = options.circleId || null;\n\n    let reqUrls = [];\n    let reqCircleId = options.circleId;\n\n    if (options.circleId) {\n      if (this._reqWait[options.circleId]) {\n        console.debug(`request wait for ${options.circleId}`);\n        return;\n      }\n      if (this._store.products[options.circleId]) {\n        console.debug(`use cache for ${options.circleId}`);\n        return;\n      }\n      this._reqWait[options.circleId] = true;\n      reqUrls.push(`${Endpoint}/product?circleExhibitInfoID=${options.circleId}&limit=100`);\n    }\n    else {\n      return;\n    }\n\n    // 情報を要求\n    const req = () => {\n      const reqUrl = reqUrls.shift();\n      if (!reqUrl) { // 取得完了\n        delete this._reqWait[reqCircleId];\n        this._event.emit('change');\n        this._event.emit('loaded');\n      }\n      else { // 取得継続中\n        fetch(reqUrl, {\n          method: 'GET'\n        }).then((res) => {\n          return res.json();\n        }).then((data) => {\n          if (data.cursor) { // 継続カーソルが存在するので次を追加\n            reqUrls.unshift(`${reqUrl.replace(/&cursor=.+$/,'')}&cursor=${data.cursor}`);\n          }\n\n          //console.log('ProductModel request',data);\n\n          if (data.list) {\n            for (let i = 0, productInfo;\n                undefined !== (productInfo = data.list[i]); ++i) {\n              this._updateCircle(productInfo);\n            }\n          }\n\n          this._event.emit('change');\n\n          // 次を要求\n          return req();\n        }).catch((err) => {\n          return console.error(err);\n        });\n      }\n    };\n\n    req();\n  }\n\n  _getDefault() {\n    return {\n      orderBy: {\n        seq: {},\n      },\n      products: {}, // サークルIDをキーにして収納された本の情報\n    };\n  }\n\n  _updateCircle(productInfo, noSave) {\n    // サークル情報更新\n    const circleId = productInfo.circleExhibitInfoID;\n    this._store.products[circleId] = this._store.products[circleId] || {};\n    this._store.products[circleId][productInfo.id] = productInfo;\n    this._store.orderBy.seq[circleId] = this._store.orderBy.seq[circleId] || [];\n    this._store.orderBy.seq[circleId][productInfo.seq-1] = productInfo.id;\n    if (!noSave) {\n      sessionStorage.setItem(\n        KeyLocalStoragePrefix+productInfo.id,\n        JSON.stringify(productInfo)\n      );\n    }\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  // 製品を取得\n  getProductOrder(circleId, productId) {\n    const orderBySeq = this._store.orderBy.seq[circleId] || [];\n    return orderBySeq ? orderBySeq.indexOf(productId) : -1;\n  }\n\n  // 製品を取得\n  getProductList(circleId) {\n    const products = this._store.products[circleId];\n    return products && Object.keys(products);\n  }\n\n  // 製品を取得\n  getProductByIndex(circleId, index) {\n    const products   = this._store.products[circleId] || {};\n    const orderBySeq = this._store.orderBy.seq[circleId] || [];\n    return products[orderBySeq[index]] || false;\n  }\n\n  // 製品を取得\n  getProduct(circleId, productId) {\n    const product = (this._store.products[circleId] || {})[productId] || false;\n    return product;\n  }\n\n  // 製品を取得\n  getProductCount(circleId) {\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    return orderBySeq ? orderBySeq.length : -1;\n  }\n\n  // 次の製品を取得\n  hasNextProduct(circleId, productId) {\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    const indexBySeq = orderBySeq && orderBySeq.indexOf(productId);\n    return !!(orderBySeq && orderBySeq[indexBySeq + 1]);\n  }\n\n  // 前の製品を取得\n  getPrevSiblings(circleId, productId) {\n    const products   = this._store.products[circleId];\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    const indexBySeq = orderBySeq && orderBySeq.indexOf(productId);\n    return (orderBySeq && products[orderBySeq[indexBySeq - 1]]) || false;\n  }\n\n  // 次の製品を取得\n  getNextSiblings(circleId, productId) {\n    const products   = this._store.products[circleId];\n    const orderBySeq = this._store.orderBy.seq[circleId];\n    const indexBySeq = orderBySeq && orderBySeq.indexOf(productId);\n    return (orderBySeq && products[orderBySeq[indexBySeq + 1]]) || false;\n  }\n\n  mergeFavorite(favList) {\n    let reqList = {};\n    favList.forEach(favItem => {\n      if (favItem.circleId && favItem.productId) {\n        const productInfo = (this._store.products[favItem.circleId]||{})[favItem.productId];\n        if (!productInfo) {\n          reqList[favItem.circleId] = true;\n          return;\n        }\n        favItem.productName  = productInfo.name;\n        favItem.productPrice = productInfo.price;\n      }\n    });\n    // 足りないものを要求\n    Object.keys(reqList).forEach((circleId) => {\n      this.request({ circleId });\n    });\n  }\n\n  clearCache() {\n    for (let i = 0; i < sessionStorage.length; i++) {\n      const key = sessionStorage.key(i);\n      if (KeyLocalStoragePrefix === key.substr(0, KeyLocalStoragePrefix.length)) {\n        sessionStorage.removeItem(key);\n      }\n    }\n    this._store = this._getDefault();\n    this._event.emit('change');\n  }\n}\n","\"use struct\";\n\nconst EventEmitter = require('events');\nconst FileDownload = require('js-file-download');\n\nconst KeyLocalStorage = 'favorite';\n\nconst eventId = 'tbf07';\n\nconst KeyCircle = 'circle';\n\nexport default class FavoriteModel {\n\n  constructor() {\n\n    // イベント通知\n    this._event = new EventEmitter();\n\n    // 保持している情報\n    this._store = JSON.parse(localStorage.getItem(KeyLocalStorage) || '{}');\n  }\n\n  // 通知を登録\n  on(name, listner) {\n    this._event.on(name, listner);\n  }\n\n  // 通知を解除\n  off(name, listner) {\n    this._event.removeListener(name, listner);\n  }\n\n  isFavorite(circleId, productId) {\n    return !!(productId\n      ? (this._store[eventId] && this._store[eventId][circleId] && this._store[eventId][circleId][productId])\n      : (this._store[eventId] && this._store[eventId][circleId] && this._store[eventId][circleId]['circle'])\n    );\n  }\n\n  setFavorite(circleId, productId) { //console.log('setFavorite', circleId, productId);\n    if (circleId) {\n      this._store[eventId] = this._store[eventId] || {};\n      this._store[eventId][circleId] = this._store[eventId][circleId] || { [KeyCircle]: null };\n      const key = productId ? productId : KeyCircle;\n      const updated = true !== this._store[eventId][circleId][key];\n      this._store[eventId][circleId][key] = true;\n      if (updated) {\n        localStorage.setItem(KeyLocalStorage, JSON.stringify(this._store));\n        this._event.emit('change', { circleId: circleId, productId: productId, favorite: true });\n      }\n    }\n  }\n\n  unsetFavorite(circleId, productId) { //console.log('unsetFavorite', circleId, productId);\n    if (circleId) {\n      this._store[eventId] = this._store[eventId] || {};\n      this._store[eventId][circleId] = this._store[eventId][circleId] || { [KeyCircle]: null };\n      const key = productId ? productId : KeyCircle;\n      const updated = true === this._store[eventId][circleId][key];\n      delete this._store[eventId][circleId][key];\n      if (updated) {\n        localStorage.setItem(KeyLocalStorage, JSON.stringify(this._store));\n        this._event.emit('change', { circleId: circleId, productId: productId, favorite: false });\n      }\n    }\n  }\n\n  export() {\n    FileDownload(JSON.stringify(this._store), 'favorite.json');\n  }\n\n  import(text) {\n    try {\n      let data = JSON.parse(text);\n      // ここで内容をチェック\n      this._store = data;\n      localStorage.setItem(KeyLocalStorage, JSON.stringify(this._store));\n      this._event.emit('change');\n      return true;\n    }\n    catch (e) {\n      console.debug(e);\n      return false;\n    }\n  }\n\n  list(eventId_) {\n\n    let favList = [];\n    let hasProduct = {};\n\n    // お気に入りの一覧を取得\n    const circleList = this._store[eventId_]||{};\n    for (let circleId in circleList) {\n      const productList = circleList[circleId]||{};\n      for (let productId in productList) {\n        if (productList[productId]) {\n          if (KeyCircle === productId) {\n            favList.push({ eventId: eventId, circleId: circleId });\n          }\n          else {\n            favList.push({ eventId: eventId, circleId: circleId, productId: productId });\n            hasProduct[circleId] = true;\n          }\n        }\n      }\n    }\n    // 頒布物をチェックしている場合はサークルのお気に入りをリストから除く\n    favList = favList.reduce((r, favItem) => {\n      if (favItem.productId ||\n          !hasProduct[favItem.circleId] ) {\n        r.push(favItem);\n      }\n      return r;\n    }, []);\n\n    return favList;\n  }\n\n}\n","\"use struct\";\n\nimport React from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Redirect } from \"react-router-dom\";\n\nfunction EventSelectView() {\n  return (\n    <div>\n      <Redirect to=\"/7/circle/\" />\n      <LinkContainer to=\"/7/circle/\">\n        <Button>技術書典７</Button>\n      </LinkContainer>\n    </div>\n  );\n}\n\nexport default EventSelectView;\n","\n\"use struct\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as faStarChecked } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as faStarUnchecked } from '@fortawesome/free-regular-svg-icons';\n\n// 製品表示用\nfunction FavoriteStar({ models, circleId, productId, isCurrent }) {\n  const { favorite } = models;\n\n  const [ favorited,  setFavorited ] = useState(favorite.isFavorite(circleId, productId));\n\n  const setFavorite   = useCallback(() => favorite.setFavorite  (circleId, productId), [favorite, circleId, productId]);\n  const unsetFavorite = useCallback(() => favorite.unsetFavorite(circleId, productId), [favorite, circleId, productId]);\n\n  useEffect(() => {//console.log('CircleSelectView','useEffect');\n    const onFavoriteChange = (params) => {\n      if (!params) {\n        setFavorited(favorite.isFavorite(circleId, productId));\n      }\n      else {\n        if (circleId  === params.circleId &&\n            productId === params.productId) {\n          setFavorited(params.favorite);\n        }\n      }\n    };\n    // 通知先を登録\n    if (isCurrent) {\n      favorite.on('change',onFavoriteChange);\n      //console.log('fav on',[circleId, productId]);\n    }\n    // クリーンアップ関数を返す\n    return isCurrent ? (() => {\n      favorite.off('change',onFavoriteChange);\n      //console.log('fav off',[circleId, productId]);\n    }) : (() => {});\n  }, [isCurrent, favorite, circleId, productId]);\n\n  return (\n    <div\n      style={{ marginLeft: 8 }}\n      onClick={favorited ? unsetFavorite : setFavorite}\n    >\n      <FontAwesomeIcon\n        icon={favorited ? faStarChecked : faStarUnchecked}\n        color={\"#ffcc00\"}\n        size=\"lg\"\n      />\n    </div>\n  );\n}\n\nexport default FavoriteStar;\n","\n\"use struct\";\n\nimport React, { useCallback } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\n// 製品表示用\nfunction ExternalLink({ eventId, circleId }) {\n\n  const handleOpenLink = useCallback(() => {\n    window.open(`https://techbookfest.org/event/${eventId}/circle/${circleId}`);\n  }, [eventId, circleId]);\n\n  return (\n    <div\n      style={{ marginLeft: 8 }}\n      onClick={handleOpenLink}\n    >\n      <FontAwesomeIcon\n        icon={faExternalLinkAlt}\n        color={\"gray\"}\n        size=\"lg\"\n      />\n    </div>\n  );\n}\n\nexport default ExternalLink;\n","\"use struct\";\n\nimport React from 'react';\n\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Form from 'react-bootstrap/Form'\n\nimport FavoriteStar from './FavoriteStar'\nimport ExternalLink from './ExternalLink'\n\n// サークル表示用\nfunction CircleCard({ models, circleInfo, isCurrent }) {\n  const circleCut = (circleInfo && circleInfo.circleCutImage) || { url: '', width: 0, height: 1 };\n  return (\n    <div className='circle-card'>\n      <Card >\n        <Card.Header>\n          <Badge variant=\"secondary\">{(circleInfo.spaces||[])[0]}</Badge>\n          <span>{circleInfo.name||' '}</span>\n          <span className='spacer' />\n          <ExternalLink eventId={'tbf07'} circleId={circleInfo && circleInfo.id} />\n          <FavoriteStar \n            key={`fav-${circleInfo && circleInfo.id}`}\n            models={models} isCurrent={isCurrent}\n            circleId={circleInfo && circleInfo.id} />\n        </Card.Header>\n        <div style={{ width: '100%', textAlign: 'center', marginTop: '8px' }} >\n          {circleCut.url && <Card.Img\n            variant=\"top\"\n            src={circleCut.url}\n            style={{\n              width:  circleCut.width * 200 / circleCut.height,\n              height: 200,\n            }}\n          />}\n          {!circleCut.url && <div\n            style={{\n              display: 'inline-block',\n              width:  141,\n              height: 200,\n              border: '5px solid black',\n              overflow: 'hidden'\n            }}\n          >\n            <div style={{ top: '50%', position: 'relative', marginTop: '-0.5em', }}>\n              NO IMAGE\n            </div>\n          </div>}\n        </div>\n        <Card.Body>\n          <div className='card-text'\n            // Card.Text だと \"<div> cannot appear as a descendant of <p>\" が出る\n          >\n            <Form>\n              <Form.Group controlId=\"name\">\n                <Form.Label>サークル名</Form.Label>\n                <div className='form-control-plaintext' >{!circleInfo.nameRuby?circleInfo.name:`${circleInfo.name}(${circleInfo.nameRuby})`}</div>\n              </Form.Group>\n              <Form.Group controlId=\"spaces\">\n                <Form.Label>配置</Form.Label>\n                <div className='form-control-plaintext' >{(circleInfo.spaces&&circleInfo.spaces[0])||''}</div>\n              </Form.Group>\n              <Form.Group controlId=\"penName\">\n                <Form.Label>ペンネーム</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.penName}</div>\n              </Form.Group>\n              {circleInfo.webSiteURL && <Form.Group controlId=\"webSiteURL\">\n                <Form.Label>Webサイト</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.webSiteURL}</div>\n              </Form.Group>}\n              <Form.Group controlId=\"genre\">\n                <Form.Label>ジャンル</Form.Label>\n                <div className='form-control-plaintext' >{circleInfo.genre}</div>\n              </Form.Group>\n              <Form.Group controlId=\"genreFreeFormat\">\n                <Form.Label>ジャンル詳細</Form.Label>\n                <pre className='form-control-plaintext' style={{ whiteSpace: 'pre-wrap' }} >{circleInfo.genreFreeFormat}</pre>\n              </Form.Group>\n            </Form>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default CircleCard;\n","\"use struct\";\n\nimport React from 'react';\n\nimport Card from 'react-bootstrap/Card'\nimport Badge from 'react-bootstrap/Badge'\nimport Form from 'react-bootstrap/Form'\n\nimport FavoriteStar from './FavoriteStar'\nimport ExternalLink from './ExternalLink'\n\nconst Type2Text = {\n  'fanzine':  '同人誌',\n  'commerce': '商業誌',\n};\n\nconst ImageSize = 200;\n\n// 製品表示用\nfunction ProductCard({ models, circleInfo, productInfo, isCurrent }) {\n  const firstImage = (productInfo && productInfo.images && productInfo.images[0]) || { url: '', width: 0, height: 1 };\n  return (\n    <div className='product-card'>\n      <Card >\n        <Card.Header>\n          <Badge variant=\"secondary\">{(circleInfo.spaces||[])[0]}</Badge>\n          <span>{circleInfo.name||' '}</span>\n          <span className='spacer' />\n          <ExternalLink eventId={'tbf07'} circleId={circleInfo && circleInfo.id} />\n          <FavoriteStar\n            key={`fav-${circleInfo && circleInfo.id}-${productInfo && productInfo.id}`}\n            models={models} isCurrent={isCurrent}\n            circleId={circleInfo && circleInfo.id} productId={productInfo && productInfo.id} />\n        </Card.Header>\n        {false&&<Card.Header>\n          {productInfo.name||' '}\n        </Card.Header>}\n        <div style={{ width: '100%', height: ImageSize, marginTop: '8px', display: 'flex', justifyContent: 'center', alignItems: 'center' }} >\n          {firstImage.url && <Card.Img\n            variant=\"top\"\n            src={firstImage.url}\n            style={Object.assign({\n            }, firstImage.width < firstImage.height ? {\n              width:  firstImage.width * ImageSize / firstImage.height,\n              height: ImageSize,\n            } : {\n              width:  ImageSize,\n              height: firstImage.height * ImageSize / firstImage.width,\n            })}\n          />}\n        </div>\n        <Card.Body>\n          <div className='card-text'\n            // Card.Text だと \"<div> cannot appear as a descendant of <p>\" が出る\n          >\n            <Form>\n            <Form.Group controlId=\"name\">\n                  <Form.Label>頒布物</Form.Label>\n                  <div className='form-control-plaintext' >{productInfo.name}</div>\n                </Form.Group>\n                <Form.Group controlId=\"page\">\n                  <Form.Label>種類 / ページ / 価格</Form.Label>\n                  <div className='form-control-plaintext' >{[\n                    Type2Text[productInfo.type],\n                    productInfo.page?`${productInfo.page} ページ`:`ページ数不明`,\n                    undefined !== productInfo.price?`${productInfo.price} 円`:'価格不明'\n                  ].join(' / ')}</div>\n                </Form.Group>\n                <Form.Group controlId=\"firstAppearanceEventName\">\n                  <Form.Label>初出</Form.Label>\n                  <div className='form-control-plaintext' >{productInfo.firstAppearanceEventName}</div>\n                </Form.Group>\n                <Form.Group controlId=\"description\">\n                  <Form.Label>概要</Form.Label>\n                  <pre className='form-control-plaintext' style={{ whiteSpace: 'pre-wrap' }} >{productInfo.description}</pre>\n                </Form.Group>\n              </Form>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default ProductCard;\n","\"use struct\";\n\nimport React from 'react';\n\nimport { Card, Spinner } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as faStarUnchecked } from '@fortawesome/free-regular-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\n\n// サークル表示用\nfunction EmptyCard() {\n  return (\n    <div className='circle-card'>\n      <Card >\n        <Card.Header>\n          <span>&nbsp;</span>\n          <span className='spacer' />\n          <FontAwesomeIcon\n            icon={faExternalLinkAlt}\n            color={\"gray\"}\n            size=\"lg\"\n            style={{ marginLeft: 8 }}\n          />\n          <FontAwesomeIcon\n            icon={faStarUnchecked}\n            color={\"gray\"}\n            size=\"lg\"\n            style={{ marginLeft: 8 }}\n          />\n        </Card.Header>\n        <div className=\"loading\">\n          <Spinner animation=\"border\" />\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default EmptyCard;\n","\"use struct\";\n\nimport React  from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\nexport default class HamburgerMenuButton extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.props.onClick(e);\n  }\n\n  render() {\n    return (\n      <a href=\"#\" onClick={this.handleClick}>\n        <FontAwesomeIcon icon={faBars} color={\"gray\"} size=\"2x\" />\n      </a>\n    );\n  }\n}","\"use struct\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleLeft, faAngleRight, faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport CircleCard from '../components/CircleCard'\nimport ProductCard from '../components/ProductCard'\nimport EmptyCard from '../components/EmptyCard'\nimport HamburgerMenuButton from '../components/HamburgerMenuButton'\n\nfunction CircleSelectView({ models, history, params }) {\n  const { circle, product, favorite } = models;\n  const { event, circleId, productId } = params;\n  //console.log('CircleSelectView',{models, history, params});\n\n  const [ circleList,  setCircleList  ] = useState();\n  const [ circleInfo,  setCircleInfo  ] = useState();\n  const [ productList, setProductList ] = useState();\n  const [ productInfo, setProductInfo ] = useState();\n\n  const handleFavoriteList = useCallback(() => {\n    history.push(`/fav/list`);\n  }, [history]);\n\n  const handleFavoriteSave = useCallback(() => {\n    favorite.export();\n  }, [favorite]);\n\n  const handleFavoriteLoad = useCallback(() => {\n    history.push(`/fav/import`);\n  }, [favorite, history]);\n\n  const handleClearCache = useCallback(() => {\n    circle.clearCache();\n    product.clearCache();\n  }, [circle, product]);\n\n  useEffect(() => {\n    const circleInfo_ = circle.getCircle(circleId);\n    circleInfo_ ? setCircleInfo(circleInfo_)\n                : circle.request({ circleId: circleId });\n    //\n    const productList_ = product.getProductList(circleId);\n    productList_ ? setProductList(productList)\n                 : product.request({ circleId: circleId });\n  }, [circle, circleId, product, productList]);\n\n  useEffect(() => {\n    if (circleId) {\n      const productInfo_ = product.getProduct(circleId, productId);\n      productInfo_ ? setProductInfo(productInfo_)\n                   : product.request({ circleId: circleId });\n    }\n  }, [circleId, product, productId]);\n\n  useEffect(() => {//console.log('CircleSelectView','useEffect');\n    const onCircleChange = () => {\n      //console.log('CircleSelectView','onCircleChange',circleId,circle.getCircle(circleId));\n      if (!circleId) {\n        // サークルを選択していない場合は一番初めのサークルの飛ぶ\n        const firstCircleInfo = circle.getFirstBooth();\n        if (firstCircleInfo) {\n          history.replace(`/${event}/circle/${firstCircleInfo.id}`);\n        }\n      }\n      else {\n        // 今のサークルを表示\n        setCircleList(circle.getCircleListOrderByBooth());\n        setCircleInfo(circle.getCircle(circleId));\n        setProductList(product.getProductList(circleId));\n        setProductInfo(product.getProduct(circleId, productId));\n      }\n    };\n    const onCircleLoaded = () => {\n      //console.log('CircleSelectView','onCircleLoaded',circleId,circle.getCircle(circleId));\n      // サークルの製品を取得\n        setCircleList(circle.getCircleListOrderByBooth());\n        setCircleInfo(circle.getCircle(circleId));\n        setProductList(product.getProductList(circleId));\n        setProductInfo(product.getProduct(circleId, productId));\n    };\n    const onProductChange = () => {\n      //console.log('CircleSelectView','onProductChange',circleId,productId,product.getProduct(circleId, productId));\n      setProductList(product.getProductList(circleId));\n      setProductInfo(product.getProduct(circleId, productId));\n    };\n    const onProductLoaded = () => {\n      //console.log('CircleSelectView','onProductLoaded',circleId,productId,product.getProduct(circleId, productId));\n      setProductList(product.getProductList(circleId));\n      setProductInfo(product.getProduct(circleId, productId));\n    };\n    // 通知先を登録\n    circle.on('change',onCircleChange);\n    circle.on('loaded',onCircleLoaded);\n    product.on('change',onProductChange);\n    product.on('loaded',onProductLoaded);\n    // クリーンアップ関数を返す\n    return () => {\n      circle.off('change',onCircleChange);\n      circle.off('loaded',onCircleLoaded);\n      product.off('change',onProductChange);\n      product.off('loaded',onProductLoaded);\n    };\n  }, [event, circle, product, circleId, productId, history]);\n\n  const circleInfo_  = circleInfo  || { id: circleId };\n  const productInfo_ = productInfo || { id: productId };\n\n  return (\n    <div className=\"card-container\">\n      {[\n        <EmptyCard />,\n        <CircleCard\n          key={`_${circleId}`}\n          isCurrent={true}\n          models={models}\n          circleInfo={circleInfo_}\n        />,\n        <ProductCard\n          key={`_${circleId}_${productId}`}\n          isCurrent={true}\n          models={models}\n          circleInfo={circleInfo_}\n          productInfo={productInfo_}\n        />\n      ][\n        !circleInfo ? 0 : (!productInfo || !productInfo.name ? 1 : 2)\n      ]}\n\n      <Dropdown className='card-menu-btn'>\n        <Dropdown.Toggle as={HamburgerMenuButton} id=\"dropdown-custom-components\">\n          \n        </Dropdown.Toggle>\n\n        <Dropdown.Menu >\n          <Dropdown.Item eventKey=\"1\" onSelect={handleFavoriteList}>お気に入り一覧</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item eventKey=\"2\" onSelect={handleFavoriteSave}>お気に入りをエクスポート</Dropdown.Item>\n          <Dropdown.Item eventKey=\"3\" onSelect={handleFavoriteLoad}>お気に入りをインポート</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item eventKey=\"3\" onSelect={handleClearCache}>キャッシュをクリア</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <Button\n        variant=\"link\"\n        className={\"circle-prev\"+(circleInfo&&circle.hasPrevCircle(circleId)?'':' btn-hidden')}\n        onClick={() => {//console.log('ButtonBack');\n          const prevCircleId = circle.getPrevCircleId(circleId);\n          prevCircleId && history.push(`/${event}/circle/${prevCircleId}`);\n        }}\n      >\n        <FontAwesomeIcon icon={faAngleLeft} color={\"gray\"} size=\"3x\" />\n      </Button>\n\n      <Button\n        variant=\"link\"\n        className={\"circle-next\"+(circleInfo&&circle.hasNextCircle(circleId)?'':' btn-hidden')}\n        onClick={() => {//console.log('ButtonNext');\n          const nextCircleId = circle.getNextCircleId(circleId);\n          nextCircleId && history.push(`/${event}/circle/${nextCircleId}`);\n        }}\n      >\n        <FontAwesomeIcon icon={faAngleRight} color={\"gray\"} size=\"3x\" />\n      </Button>\n\n\n      <Button\n        variant=\"link\"\n        className={\"product-prev\"+(productId?'':' btn-hidden')}\n        onClick={() => {//console.log('ButtonTop');\n          const prevProduct = product.getPrevSiblings(circleId, productId);\n          history.push(\n            prevProduct\n              ? `/${event}/circle/${circleId}/${prevProduct.id}`\n              : `/${event}/circle/${circleId}`\n            );\n        }}\n      >\n        <FontAwesomeIcon icon={faAngleUp} color={\"gray\"} size=\"3x\" />\n      </Button>\n\n      <Button\n        variant=\"link\"\n        className={\"product-next\"+(product.hasNextProduct(circleId,productId)?'':' btn-hidden')}\n        onClick={() => {//console.log('ButtonButton');\n          const nextProduct = product.getNextSiblings(circleId, productId);\n          history.push(\n            nextProduct\n              ? `/${event}/circle/${circleId}/${nextProduct.id}`\n              : `/${event}/circle/${circleId}`\n            );\n        }}\n      >\n        <FontAwesomeIcon icon={faAngleDown} color={\"gray\"} size=\"3x\" />\n      </Button>\n\n    </div>\n  );\n}\n\nexport default CircleSelectView;\n","\n\"use struct\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\n// 製品表示用\nfunction MessageBox({ title, message, onClose }) {\n  const [show, setShow] = useState(!!message);\n\n  useEffect(() => {\n    setShow(!!message);\n  }, [message]);\n\n  const handleClose = useCallback(() => { setShow(false); onClose && onClose(); }, [onClose]);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{message}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={handleClose}>\n            了解\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default MessageBox;\n","\"use struct\";\n\nimport React, {useState, useCallback} from 'react'\n\nimport { ButtonToolbar, Button } from 'react-bootstrap';\n\nimport {useDropzone} from 'react-dropzone'\nimport 'react-dropzone/examples/theme.css';\n\nimport MessageBox from '../components/MessageBox';\n\nconst MsgImportSuccess = 'お気に入りのインポートに成功しました';\nconst MsgImportFailed  = 'お気に入りのインポートに失敗しました';\n\nfunction FavoriteImportView({ models, history }) {\n  const { favorite } = models;\n\n  const [ message, setMessage ] = useState(false);\n\n  const {\n    acceptedFiles,\n    rejectedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'application/json'\n  });\n\n  const rejectedFilesItems = rejectedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} は利用できません。\n    </li>\n  ));\n\n  const handleImportClick = useCallback(() => {\n    if (acceptedFiles.length < 1) {\n      return;\n    }\n\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    \n    // ファイル情報をキャプチャ\n    reader.onload = (e) => {\n      if (!favorite.import(e.target.result)) {\n        setMessage(MsgImportFailed);\n      }\n      else {\n        setMessage(MsgImportSuccess);\n      }\n    };\n\n    // Read in the image file as a data URL.\n    reader.readAsText(file);\n\n  }, [acceptedFiles, favorite]);\n\n  const handleBackClick = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  const handleMessageClose = () => {\n    setMessage(false);\n  };\n\n  // インポートに成功したので戻る\n  const handleMessageCloseWithBack = useCallback(() => {\n    setMessage(false);\n    history.goBack();\n  }, [history]);\n\n  return (\n      <div className='page-container'>\n        <h3>\n          お気に入りのインポート\n        </h3>\n        <div {...getRootProps({className: 'dropzone'})}>\n          <input {...getInputProps()} />\n          <p>ここでエクスポートしたお気に入りをドラッグ＆ドロップするか、クリックして選択してください</p>\n          <em>(*.json のみ指定可能)</em>\n        </div>\n        <ol>\n          {rejectedFilesItems}\n        </ol>\n        <ButtonToolbar>\n          <Button variant=\"primary\"   onClick={handleImportClick} disabled={acceptedFiles.length<1}>インポート</Button>\n          <Button variant=\"secondary\" onClick={handleBackClick}>戻る</Button>\n        </ButtonToolbar>\n        <MessageBox\n          title=\"インポート\"\n          message={message}\n          onClose={message === MsgImportSuccess ? handleMessageCloseWithBack : handleMessageClose}\n        />\n      </div>\n  );\n}\n\nexport default FavoriteImportView;\n","\"use struct\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\nimport { ButtonToolbar, Button } from 'react-bootstrap';\n\nimport { Table } from 'react-bootstrap';\n\nfunction FavoriteListView({ history, models }) {\n  const { circle, product, favorite } = models;\n\n  const [ favList, setFavList ] = useState(favorite.list('tbf07'));\n  const [ priceTotal, setPriceTotal ] = useState({ price: 0, withUnknown: false });\n\n  useEffect(() => {//console.log('CircleSelectView','useEffect');\n    const updateFavList = () => {\n      let favList = favorite.list('tbf07');\n      circle.mergeFavorite(favList);\n      product.mergeFavorite(favList);\n      setFavList(favList);\n      setPriceTotal(favList.reduce((r, favItem) => {\n        if (favItem.productId) {\n          if (undefined === favItem.productPrice) {\n            r.withUnknown = true;\n          }\n          else {\n            r.price += favItem.productPrice;\n          }\n        }\n        return r;\n      }, { price: 0, withUnknown: false }));\n    };\n    // 通知先を登録\n    circle.on('change',updateFavList);\n    circle.on('loaded',updateFavList);\n    product.on('change',updateFavList);\n    product.on('loaded',updateFavList);\n    favorite.on('change',updateFavList);\n    return () => { // クリーンアップ関数を返す\n      circle.off('change',updateFavList);\n      circle.off('loaded',updateFavList);\n      product.off('change',updateFavList);\n      product.off('loaded',updateFavList);\n      favorite.off('change',updateFavList);\n    };\n  }, [circle,product,favorite]);\n\n  const handleBackClick = useCallback(() => {\n    history.goBack();\n  }, [history]);\n\n  return (\n    <div className='page-container'>\n      <h3>\n        お気に入り一覧\n      </h3>\n      <Table className='fav-list' striped bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th className='circle-space'>配置</th>\n            <th className='circle-name'>サークル名</th>\n            <th className='product-name'>頒布物</th>\n            <th className='product-price'>価格</th>\n          </tr>\n        </thead>\n        <tbody>\n          {favList.map((favItem, index) => {\n            return (\n              <tr key={`fav-${favItem.circleId}-${favItem.productId|'circle'}`}>\n                <td className='circle-space' >\n                  <Button variant=\"link\" style={{ padding: 0 }} onClick={() => {\n                    if (favItem.productId) {\n                      history.push(`/${favItem.eventId.replace(/^[a-z]+0*/, '')}/circle/${favItem.circleId}/${favItem.productId}`);\n                    }\n                    else {\n                      history.push(`/${favItem.eventId.replace(/^[a-z]+0*/, '')}/circle/${favItem.circleId}`);\n                    }\n                  }} >\n                    {favItem.space||''}\n                  </Button>\n                </td>\n                <td className='circle-name'>{favItem.circleName||''}</td>\n                <td className='product-name'>{favItem.productName||''}</td>\n                <td className='product-price' >{undefined===favItem.productPrice?'':`${favItem.productPrice} 円`}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <th className='circle-space' >合計</th>\n            <td colSpan={3} className='product-price' >{`${priceTotal.price} 円${priceTotal.withUnknown?' ※不明含む':''}`}</td>\n          </tr>\n        </tfoot>\n      </Table>\n      <ButtonToolbar>\n        <Button variant=\"secondary\" onClick={handleBackClick}>戻る</Button>\n      </ButtonToolbar>\n    </div>\n  );\n}\n\nexport default FavoriteListView;\n","\"use struct\";\n\nimport React from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport EventSelectView  from './views/EventSelect';\nimport CircleSelectView from './views/CircleSelect';\nimport FavoriteImportView from './views/FavoriteImport';\nimport FavoriteListView from './views/FavoriteList';\n\nfunction App({ models }) {\n  return (\n    <Router>\n      <Route\n        path=\"/\" exact\n        render={(router) => \n          <EventSelectView\n            models={models}\n            history={router.history}\n            params={router.match.params}\n          />}\n      />\n      <Route\n        path=\"/:event/circle/:circleId?/:productId?\"\n        render={(router) => \n          <CircleSelectView\n            models={models}\n            history={router.history}\n            params={router.match.params}\n          />}\n      />\n      <Route\n        path=\"/fav/import\"\n        render={(router) => \n          <FavoriteImportView\n            models={models}\n            history={router.history}\n          />}\n      />\n      <Route\n        path=\"/fav/list\"\n        render={(router) => \n          <FavoriteListView\n            models={models}\n            history={router.history}\n          />}\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","\"use struct\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport CircleModel from './models/Circle';\nimport ProductModel from './models/Product';\nimport FavoriteModel from './models/Favorite';\n\nimport App from './App';\n\n\nconst models = {\n  circle:  new CircleModel(),\n  product: new ProductModel(),\n  favorite: new FavoriteModel(),\n};\n\nmodels.circle.request();\n\nReactDOM.render(\n  <App models={models} />,\n  document.getElementById('root')\n);\n\n// アプリをオフラインで動作させてより速くロードしたい場合は、以下で unregister() を\n// register() に変更できます。これにはいくつかの落とし穴があります。\n// サービスワーカーの詳細: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\n// 要求スペック\n//   config#onUpdate(registration);\n//   config#onSuccess(registration);\n// serviceWorker.register(config);\n"],"sourceRoot":""}